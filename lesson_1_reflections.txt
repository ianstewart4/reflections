How did viewing a difference between two versions help you spot the bug?
-Technically it didn't because I didn't spot it, but it helps because if
you know that the old version worked but the new version doesn't then it
is because something was changed, so you only need to examine the changes
to find what is causing the problem

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It allows you to sift through differences and find what might be causing an error
much quicker

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: It lets you decide when a change is important enough to justify having a new version
instead of having a new version for each new character. Con: you may sometimes
forget to do that and then your updated version is hundreds of lines of code longer so the 
differences you're sifting through can become no different than sifting through your entire
program.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because git is used for computer programs that often have multiple files for one
program, whereas google docs are usually just standalone documents like an essay or
a powerpoint presentation.

How can you use the commands git log and git diff to view the history of files?

    You can use git log to see all of the commits that have been made, and then you can use
git diff to analyze the differences between any two commits.

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here