What happens when you initialize a repository? Why do you need to do it?
	Not really sure. 

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	Also not entirely sure...
How can you use the staging area to make sure you have one commit per logical
change?
	Again, details to answer this specific question weren't explicitly discussed in 
	the tutorial, but I think if you make a logical change to two separate files,
	you could add one to the staging area, commit, then add the other and commit 
	that one, leaving a separate message describing the change for each one.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	You could use it for developing a feature of a program while still developing the 
	program in a different environment where changes to the feature or program won't
	affect eachother, yet progress can still be made on each.

How do the diagrams help you visualize the branch structure?
	It allows you to visualize the parent of each commit and branch

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
